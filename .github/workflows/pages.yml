name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Skip dependencies
      run: |
        echo "Skipping npm install - this is a static site deployment"
        echo "No dependencies needed for static HTML/CSS/JS files"
        
    - name: Validate files
      run: |
        echo "Validating required files..."
        
        # 检查主要HTML文件
        if [ ! -f index.html ]; then
          echo "❌ index.html not found"
          exit 1
        fi
        echo "✅ index.html found"
        
        if [ ! -f admin.html ]; then
          echo "❌ admin.html not found"
          exit 1
        fi
        echo "✅ admin.html found"
        
        # 检查JavaScript目录
        if [ ! -d js ]; then
          echo "❌ js directory not found"
          exit 1
        fi
        echo "✅ js directory found"
        
        # 列出所有文件
        echo "📁 Project structure:"
        find . -type f -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" | head -20
        
    - name: Build site
      run: |
        echo "Building site for GitHub Pages..."
        
        # 创建构建目录
        mkdir -p _site
        
        # 复制所有文件到_site目录
        cp -r * _site/ 2>/dev/null || true
        
        # 移除不需要的文件
        rm -rf _site/.git _site/.github _site/node_modules _site/.gitignore _site/README.md 2>/dev/null || true
        
        # 创建.nojekyll文件
        touch _site/.nojekyll
        
        # 验证构建结果
        echo "📦 Build contents:"
        ls -la _site/
        
        echo "✅ Build completed successfully"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Verify deployment
      run: |
        echo "🎉 Deployment completed!"
        echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
        
        # 等待一下让部署生效
        sleep 10
        
        # 验证网站可访问性
        echo "🔍 Verifying site accessibility..."
        curl -f "${{ steps.deployment.outputs.page_url }}" > /dev/null && echo "✅ Main page accessible" || echo "❌ Main page not accessible"
        
    - name: Post-deployment summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status**: Successfully deployed" >> $GITHUB_STEP_SUMMARY
        echo "🌐 **URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Deployed Files" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ index.html (主页)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ admin.html (管理后台)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ JavaScript 组件" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ CSS 样式文件" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Service Worker" >> $GITHUB_STEP_SUMMARY
